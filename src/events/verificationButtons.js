module.exports = {
    name: 'interactionCreate',
    async execute(interaction) {
        if (!interaction.isButton()) return;

        const { customId, member, guild } = interaction;

        switch (customId) {
            case 'accept-rules': {
                try {
                    // R√©cup√©rer le r√¥le initial depuis la configuration
                    const config = require('../../config.json');
                    const initialRole = await guild.roles.fetch(config.verification.initialRoleId);

                    if (!initialRole) {
                        await interaction.reply({
                            content: '‚ùå Erreur: Le r√¥le initial n\'a pas √©t√© trouv√©.',
                            ephemeral: true
                        });
                        return;
                    }

                    // Ajouter le r√¥le initial
                    await member.roles.add(initialRole);

                    await interaction.reply({
                        content: '‚úÖ Vous avez accept√© le r√®glement ! Rendez-vous dans le salon des r√¥les pour terminer votre v√©rification.',
                        ephemeral: true
                    });
                } catch (error) {
                    console.error('Erreur lors de l\'acceptation du r√®glement:', error);
                    await interaction.reply({
                        content: '‚ùå Une erreur est survenue lors de la validation du r√®glement.',
                        ephemeral: true
                    });
                }
                break;
            }

            case 'complete-verification': {
                try {
                    // R√©cup√©rer le r√¥le final depuis la configuration
                    const config = require('../../config.json');
                    const finalRole = await guild.roles.fetch(config.verification.finalRoleId);
                    const initialRole = await guild.roles.fetch(config.verification.initialRoleId);

                    if (!finalRole || !initialRole) {
                        await interaction.reply({
                            content: '‚ùå Erreur: Les r√¥les n\'ont pas √©t√© trouv√©s.',
                            ephemeral: true
                        });
                        return;
                    }

                    // V√©rifier si le membre a le r√¥le initial
                    if (!member.roles.cache.has(initialRole.id)) {
                        await interaction.reply({
                            content: '‚ùå Vous devez d\'abord accepter le r√®glement !',
                            ephemeral: true
                        });
                        return;
                    }

                    // Retirer le r√¥le initial et ajouter le r√¥le final
                    await member.roles.remove(initialRole);
                    await member.roles.add(finalRole);

                    await interaction.reply({
                        content: 'üéâ F√©licitations ! Vous avez maintenant acc√®s √† l\'int√©gralit√© du serveur !',
                        ephemeral: true
                    });
                } catch (error) {
                    console.error('Erreur lors de la compl√©tion de la v√©rification:', error);
                    await interaction.reply({
                        content: '‚ùå Une erreur est survenue lors de la validation finale.',
                        ephemeral: true
                    });
                }
                break;
            }
        }
    }
};
