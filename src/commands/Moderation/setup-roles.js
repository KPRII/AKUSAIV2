const { SlashCommandBuilder, EmbedBuilder, ButtonBuilder, ButtonStyle, ActionRowBuilder, StringSelectMenuBuilder, PermissionFlagsBits } = require('discord.js');
const configManager = require('../../utils/configManager');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('setup-roles')
        .setDescription('Configure le syst√®me de v√©rification en deux √©tapes')
        .addChannelOption(option =>
            option.setName('verification_channel')
                .setDescription('Le salon de v√©rification avec le r√®glement')
                .setRequired(true))
        .addChannelOption(option =>
            option.setName('roles_channel')
                .setDescription('Le salon pour choisir les r√¥les')
                .setRequired(true))
        .addRoleOption(option =>
            option.setName('temp_role')
                .setDescription('R√¥le temporaire apr√®s validation du r√®glement')
                .setRequired(true))
        .addRoleOption(option =>
            option.setName('member_role')
                .setDescription('R√¥le final de membre')
                .setRequired(true))
        .setDefaultMemberPermissions(PermissionFlagsBits.Administrator),

    execute: async function(interaction) {
        try {
            const verificationChannel = interaction.options.getChannel('verification_channel');
            const rolesChannel = interaction.options.getChannel('roles_channel');
            const tempRole = interaction.options.getRole('temp_role');
            const memberRole = interaction.options.getRole('member_role');

            // V√©rifier les permissions du bot
            const botMember = await interaction.guild.members.fetchMe();
            if (!botMember.permissions.has(PermissionFlagsBits.ManageRoles)) {
                return await interaction.reply({
                    content: '‚ùå Je n\'ai pas la permission de g√©rer les r√¥les !',
                    ephemeral: true
                });
            }

            // Sauvegarder la configuration
            const config = {
                verificationChannelId: verificationChannel.id,
                rolesChannelId: rolesChannel.id,
                tempRoleId: tempRole.id,
                memberRoleId: memberRole.id
            };

            configManager.setGuildConfig(interaction.guild.id, config);

            // Configurer les permissions
            await verificationChannel.permissionOverwrites.set([
                {
                    id: interaction.guild.roles.everyone.id,
                    allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory],
                    deny: [PermissionFlagsBits.SendMessages]
                },
                {
                    id: tempRole.id,
                    deny: [PermissionFlagsBits.ViewChannel]
                }
            ]);

            await rolesChannel.permissionOverwrites.set([
                {
                    id: interaction.guild.roles.everyone.id,
                    deny: [PermissionFlagsBits.ViewChannel]
                },
                {
                    id: tempRole.id,
                    allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory],
                    deny: [PermissionFlagsBits.SendMessages]
                },
                {
                    id: memberRole.id,
                    deny: [PermissionFlagsBits.ViewChannel]
                }
            ]);

            // Message du r√®glement
            const rulesEmbed = new EmbedBuilder()
                .setTitle('Bienvenue sur le serveur Akusai !')
                .setColor('#FF69B4')
                .setDescription(`On est ici pour rigoler, partager des bons moments et s'amuser ensemble. MAIS, comme dans toute bonne blague, il y a des limites √† respecter. Voici les r√®gles de notre serveur, histoire que l'ambiance reste cool et d√©tendue, sans d√©raper.

**1. Respect et bienveillance avant tout !**
Les blagues, c'est cool, mais il y a des limites. Le respect des autres membres est primordial. Pas de propos haineux, discriminatoires, sexistes, racistes, homophobes, ou toute forme de harc√®lement, m√™me sous forme de "plaisanterie".
Les discussions doivent rester saines et inclusives.

**2. L'humour, mais avec d√©licatesse.**
On adore tous l'humour d√©cal√©, mais il faut savoir ne pas franchir la ligne. Les blagues peuvent √™tre os√©es, mais ne tombent jamais dans l'extr√™me. Si tu fais une blague et que quelqu'un est g√™n√© ou mal √† l'aise, il suffit de t'excuser et de rester cool.

**3. Pas de spam.**
Envoyer des messages en masse, des gifs en continu ou des spams de liens ne fera rire personne. Restez dans le ton de la conversation et √©vitez de perturber le chat avec des messages r√©p√©titifs.

**4. Pas de contenu NSFW (not safe for work) !**
M√™me si on aime tous les m√®mes un peu os√©s, ce serveur reste un lieu de partage pour tous les √¢ges. Aucun contenu NSFW, explicite ou inappropri√© n'est autoris√©, que ce soit en texte, images, vid√©os ou autres.

**5. Les discussions s√©rieuses ? On en a aussi.**
Bien que l'on soit ici pour rigoler, n'oublions pas que des discussions plus s√©rieuses peuvent avoir lieu. Respecte les moments o√π les gens veulent parler de choses plus profondes. Les blagues, c'est bien, mais parfois, la bienveillance l'emporte.

**6. Les conflits, on r√®gle √ßa en priv√©.**
Si tu as un probl√®me avec quelqu'un, contacte-le en priv√©. Ne fais pas de disputes publiques qui pourraient g√¢cher l'ambiance du serveur. Le staff est l√† pour intervenir si n√©cessaire, mais on pr√©f√®re r√©soudre les choses calmement.

**7. Le staff est l√† pour veiller sur l'ambiance.**
Les membres du staff sont l√† pour faire respecter ces r√®gles. En cas de doute, tu peux toujours leur demander. Si un membre du staff te donne un avertissement, √©coute-le, et ne sois pas vex√©(e). Ils sont l√† pour maintenir une ambiance saine et amusante pour tout le monde.

**8. Ne partage pas de contenu ill√©gal !**
On est ici pour s'amuser, pas pour enfreindre la loi. Pas de piratage, pas de contenu prot√©g√© par des droits d'auteur, et bien s√ªr, tout ce qui est ill√©gal est strictement interdit.`)
                .setFooter({ text: 'Cliquez sur le bouton ci-dessous pour acc√©der √† la s√©lection des r√¥les' });

            const rulesButton = new ButtonBuilder()
                .setCustomId('verify-accept')
                .setLabel('J\'accepte le r√®glement')
                .setStyle(ButtonStyle.Success)
                .setEmoji('‚úÖ');

            const rulesRow = new ActionRowBuilder().addComponents(rulesButton);

            await verificationChannel.send({
                embeds: [rulesEmbed],
                components: [rulesRow]
            });

            // Menus de s√©lection des r√¥les
            // Genre
            const genderEmbed = new EmbedBuilder()
                .setTitle('üë• Genre')
                .setDescription('S√©lectionnez votre genre')
                .setColor('#FF69B4')
                .setImage('https://i.pinimg.com/736x/3b/05/5d/3b055dff292b5f96b7e87bade99a2758.jpg');

            const genderMenu = new StringSelectMenuBuilder()
                .setCustomId('select-gender')
                .setPlaceholder('Choisissez votre genre')
                .addOptions([
                    {
                        label: 'Femme',
                        description: 'Je suis une femme',
                        value: 'femme',
                        emoji: 'üë©'
                    },
                    {
                        label: 'Homme',
                        description: 'Je suis un homme',
                        value: 'homme',
                        emoji: 'üë®'
                    }
                ]);

            // √Çge
            const ageEmbed = new EmbedBuilder()
                .setTitle('üéÇ √Çge')
                .setDescription('S√©lectionnez votre tranche d\'√¢ge')
                .setColor('#87CEEB')
                .setImage('https://i.pinimg.com/736x/06/9a/2c/069a2c60a49119eda57b1ca7d7a57b71.jpg');

            const ageMenu = new StringSelectMenuBuilder()
                .setCustomId('select-age')
                .setPlaceholder('Choisissez votre √¢ge')
                .addOptions([
                    {
                        label: 'Mineur',
                        description: 'Je suis mineur (-18 ans)',
                        value: 'mineur',
                        emoji: 'üî∏'
                    },
                    {
                        label: 'Majeur',
                        description: 'Je suis majeur (+18 ans)',
                        value: 'majeur',
                        emoji: 'üîπ'
                    }
                ]);

            // Statut
            const statusEmbed = new EmbedBuilder()
                .setTitle('üíù Statut')
                .setDescription('S√©lectionnez votre statut')
                .setColor('#FF69B4')
                .setImage('https://i.pinimg.com/736x/61/ad/c3/61adc3c0fd101e20082b08057fc48048.jpg')
                .setFooter({ text: 'Une fois votre statut choisi, vous aurez acc√®s au serveur' });

            const statusMenu = new StringSelectMenuBuilder()
                .setCustomId('select-status')
                .setPlaceholder('Choisissez votre statut')
                .addOptions([
                    {
                        label: 'En couple',
                        description: 'Je suis en couple',
                        value: 'couple',
                        emoji: 'üíë'
                    },
                    {
                        label: 'C√©libataire',
                        description: 'Je suis c√©libataire',
                        value: 'celibataire',
                        emoji: 'üíù'
                    }
                ]);

            // Cr√©er les rows pour les menus
            const genderRow = new ActionRowBuilder().addComponents(genderMenu);
            const ageRow = new ActionRowBuilder().addComponents(ageMenu);
            const statusRow = new ActionRowBuilder().addComponents(statusMenu);

            // Envoyer les menus de r√¥les
            await rolesChannel.send({ embeds: [genderEmbed], components: [genderRow] });
            await rolesChannel.send({ embeds: [ageEmbed], components: [ageRow] });
            await rolesChannel.send({ embeds: [statusEmbed], components: [statusRow] });

            await interaction.reply({
                content: '‚úÖ Le syst√®me de v√©rification a √©t√© configur√© avec succ√®s !',
                ephemeral: true
            });

        } catch (error) {
            console.error('Erreur lors de la configuration:', error);
            await interaction.reply({
                content: '‚ùå Une erreur est survenue lors de la configuration. V√©rifiez les permissions du bot.',
                ephemeral: true
            });
        }
    }
};
