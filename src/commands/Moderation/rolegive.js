const { SlashCommandBuilder, PermissionFlagsBits } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('addrole')
        .setDescription('Ajouter un r√¥le √† un utilisateur')
        .setDefaultMemberPermissions(PermissionFlagsBits.Administrator) // Limite l'acc√®s aux administrateurs
        .addUserOption(option =>
            option.setName('utilisateur')
                .setDescription('L\'utilisateur auquel vous voulez ajouter le r√¥le')
                .setRequired(true))
        .addRoleOption(option =>
            option.setName('role')
                .setDescription('Le r√¥le que vous voulez ajouter')
                .setRequired(true)),
    async execute(interaction) {
        const utilisateur = interaction.options.getUser('utilisateur');
        const role = interaction.options.getRole('role');
        const membre = interaction.guild.members.cache.get(utilisateur.id);
        const botMember = interaction.guild.members.me;

        if (!membre) {
            return interaction.reply({
                content: '‚ùå **Utilisateur introuvable ou non pr√©sent dans ce serveur.**',
                ephemeral: true
            });
        }

        // V√©rifier que le bot a la permission de g√©rer les r√¥les
        if (!botMember.permissions.has(PermissionFlagsBits.ManageRoles)) {
            return interaction.reply({
                content: '‚ùå **Je n\'ai pas la permission de g√©rer les r√¥les dans ce serveur.**',
                ephemeral: true
            });
        }

        // V√©rifier si l'utilisateur a d√©j√† le r√¥le
        if (membre.roles.cache.has(role.id)) {
            return interaction.reply({
                content: `üîí **${utilisateur} a d√©j√† le r√¥le ${role}.**`,
                ephemeral: true
            });
        }

        // V√©rifier si le r√¥le √† ajouter est sup√©rieur au r√¥le du bot
        if (role.position >= botMember.roles.highest.position) {
            return interaction.reply({
                content: '‚ö†Ô∏è **Je ne peux pas ajouter un r√¥le sup√©rieur √† mon propre r√¥le.**',
                ephemeral: true
            });
        }

        // Ajouter le r√¥le √† l'utilisateur
        try {
            await membre.roles.add(role);
            interaction.reply({
                content: `‚úÖ **Le r√¥le ${role} a √©t√© ajout√© √† ${utilisateur} avec succ√®s.**`,
                ephemeral: true
            });
        } catch (error) {
            console.error(error);
            interaction.reply({
                content: '‚ùå **Une erreur s\'est produite lors de l\'ajout du r√¥le.**',
                ephemeral: true
            });
        }
    },
};
